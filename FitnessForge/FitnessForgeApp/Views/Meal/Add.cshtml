@model Meal
@{
    string? mealType = (string?)ViewData["mealType"];
    List<FoodHasProduct>? allFoodHasProducts = (List<FoodHasProduct>?)ViewData["allFoodHasProducts"];
}
@if (ViewData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewData["ErrorMessage"]
    </div>
}
<h4 class="text-center text-orange fw-bold">Ételek</h4>
<div class="row text-center text-orange mt-3 rounded-3">
    <div class="col">
        <p class="fw-bold">Étel</p>
    </div>
    <div class="col">
        <p class="fw-bold">Kalória (100g/ml)</p>
    </div>
    <div class="col">
        <p class="fw-bold">Szénhidrát</p>
    </div>
    <div class="col">
        <p class="fw-bold">Fehérje</p>
    </div>
    <div class="col">
        <p class="fw-bold">Zsír</p>
    </div>
    <div class="col">
        <p class="fw-bold">Mennyiség</p>
    </div>
</div>
<hr style="border:5px solid rgb(204,0,0)" />
<div class="container fw-bold text-center text-orange pb-3" id="scroll-table">
    @foreach (var fhp in allFoodHasProducts)
    {
            <div class="row bg-red text-center text-orange mt-3 rounded-3" id="foodDiv">
                <div class="col">
                    <p>@fhp.Food.Name</p>
                    @if (fhp.Food.Products.Count > 1)
                    {
                        <i class="fa-solid fa-angles-down" onclick="toggleHiddenDiv(this)"></i>
                    }
                </div>
                <div class="col">
                <p>@Math.Round(fhp.Food.Products.Sum(x => x.Calorie * fhp.Amount / fhp.Food.Amount), 2)</p>
                </div>
                <div class="col">
                <p>@Math.Round(fhp.Food.Products.Sum(x => x.Carbohydrate * fhp.Amount / fhp.Food.Amount), 2) g</p>
                </div>
                <div class="col">
                <p>@Math.Round(fhp.Food.Products.Sum(x => x.Protein * fhp.Amount / fhp.Food.Amount), 2) g</p>
                </div>
                <div class="col">
                <p>@Math.Round(fhp.Food.Products.Sum(x => x.Fat * fhp.Amount / fhp.Food.Amount), 2) g</p>
                </div>
                <div class="col">
                    <div class="d-flex flex-column">
                        <form asp-action="AddFoodToMeal" method="post">
                            <div class="mb-2">
                                <input asp-for="FoodId" value="@fhp.FoodId" type="hidden" />
                                <input value="@mealType" type="hidden" name="mealType" />
                                <input id="Amount" type="number" asp-for="Amount" min="0" step="0.001" required />
                                <span asp-validation-for="Amount" class="text-danger"></span>
                            </div>
                            <div class="mb-2">
                                <label>@fhp.Food.Unit.Symbol</label>
                            </div>
                            <div>
                                <button class="btn btn-sm btn-success rounded-circle" type="submit">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        @if (fhp.Food.Products.Count > 1)
        {
            <div class="row hidden-div bg-red fw-bold text-orange m-1 p-1 rounded-3">
                <div class="row">
                    <div class="col-3"><p>Termék neve</p></div>
                    <div class="col-3"><p>Szénhidrát</p></div>
                    <div class="col-3"><p>Fehérje</p></div>
                    <div class="col-3"><p>Zsír</p></div>
                </div>
                <hr />
                @foreach (var product in fhp.Food.Products)
                {                
                    <div class="row">
                        <div class="col-3"><p>@product.Brand - @product.Name</p></div>
                        <div class="col-3"><p>@Math.Round(product.Carbohydrate * fhp.Food.Amount / fhp.Amount, 2) g</p></div>
                        <div class="col-3"><p>@Math.Round(product.Protein * fhp.Food.Amount / fhp.Amount, 2) g</p></div>
                        <div class="col-3"><p>@Math.Round(product.Fat * fhp.Food.Amount / fhp.Amount, 2) g</p></div>
                    </div>
                }
            </div>
        }
    }
</div>

<script>
    function toggleHiddenDiv(icon) {
        var parentDiv = icon.parentNode.parentNode.nextElementSibling;
        var iconClassList = icon.classList;

        parentDiv.classList.toggle("shown-div");
        iconClassList.toggle("fa-angles-down");
        iconClassList.toggle("fa-angles-up");

        var allHiddenDivs = document.querySelectorAll('.hidden-div');
        allHiddenDivs.forEach(function (div) {
            if (div !== parentDiv) {
                div.classList.remove("shown-div");
                var siblingIcon = div.previousElementSibling.querySelector('.fa-solid');
                if (siblingIcon) {
                    var siblingIconClassList = siblingIcon.classList;
                    siblingIconClassList.remove("fa-angles-up");
                    siblingIconClassList.add("fa-angles-down");
                }
            }
        });
    }
</script>